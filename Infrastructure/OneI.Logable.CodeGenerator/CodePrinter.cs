namespace OneI.Logable;

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text;
using Microsoft.CodeAnalysis.Text;
using OneI.Logable.Definitions;

/// <summary>
/// The code printer.
/// </summary>
public static partial class CodePrinter
{
    private static readonly HashSet<TypeDef> _types = new();

    public static void AddType(TypeDef type)
    {
        _types.Add(type);
    }

    internal static SourceText Print(ImmutableArray<MethodDef?> methods)
    {
        var content = new IndentedStringBuilder();

        content.AppendLine($"// <auto-generated/> {DateTime.Now:HH:mm:ss}");
        content.AppendLine("#nullable enable");
        content.AppendLine("namespace OneI.Logable;");
        content.AppendLine();
        content.AppendLine("[global::System.Diagnostics.DebuggerStepThrough]");
        content.AppendLine("public static partial class Log");
        content.AppendLine("{");

        using(var _ = content.Indent())
        {
            content.AppendLine("#region Extension Methods");
            content.AppendLine();

            foreach(var item in methods.Where(x => x is not null))
            {
                PrintMethod(content, item!);

                content.AppendLine();
            }

            content.AppendLine("#endregion Extension Methods");
            content.AppendLine();
            content.AppendLine("#region Create Property Values");
            content.AppendLine();

            foreach(var item in _types)
            {
                PrintType(content, item);

                content.AppendLine();
            }

            content.AppendLine("#endregion Create Property Values");
        }

        content.AppendLine("}");
        content.AppendLine("#nullable restore");

        return SourceText.From(content.ToString(), Encoding.UTF8);
    }
}
